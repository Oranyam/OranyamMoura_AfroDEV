# -*- coding: utf-8 -*-
"""OranyamMoura_AfroDEV

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sgd7mEgjQgJZONbccmI5PU8m_EeiO3ZL
"""

# Apresentação de canditato:
Nome = "Oranyam Moura"
Idade = 18
Altura = 1.85
Raça: Preto.
Gênero: Homem cis
Hobbie: Aprender novas tecnlogias e suas usabilidades corriqueiras do dia-a-dia
Meta atual: Ser adimitido como desenvolvedor.jr na alelo, e me tornar dia após dia um proficional melhor!!!

import pandas as pd

df = pd.read_excel("/content/Atletas.xlsx")

#• Total de atletas participantes:
Atletas = input()
pd.DataFrame(df)

#• Atletas americanos:
pd.DataFrame(df.loc()[df["Nacionalidade"] == "United States of America"])

#• Atletas chineses:
pd.DataFrame(df.loc()[df["Nacionalidade"] == "People's Republic of China"])

#• Atletas japoneses:
pd.DataFrame(df.loc()[df["Nacionalidade"] == "Japan"])

#   (Menção honrosa)
#• Atletas brasileiros:
pd.DataFrame(df.loc()[df["Nacionalidade"] == "Brazil"])

df = pd.read_excel("/content/Gênero por esporte.xlsx")

#• Tabela com números precisos:
pd.DataFrame(df)

# •Total de participantes homens:
df["Homens"].sum()

# •Total de participantes mulheres:
df["Mulheres"].sum()

# •Lista de esportes com mais homens do que mulheres
def maisHomens():
  print('Esporte com mais Homens')
  return df.query('Homens > Mulheres')

maisHomens()

# •Lista de esportes com mais mulheres do que homens
def maisMulheres():
  print('Esporte com mais Mulheres')
  return df.query('Mulheres > Homens')

maisMulheres()

df = pd.read_excel("/content/Medalhas.xlsx")

pd.DataFrame(df)

#• Ranking por maior quantidade de medalhas somadas:
thebest= df.groupby('Rank')
the_best_pais = the_best[['Total','Rank']].sum()
the_best_pais.sort_values('Total', ascending = False).head(10)

#• Ranking por medalhas de ouro:
the_best = df.groupby('Nacionalidade')
the_best_pais = the_best[['Ouro','Nacionalidade']].sum()
the_best_pais.sort_values('Ouro', ascending = False).head(5)

#• Ranking por medalhas de Prata:
the_best = df.groupby('Nacionalidade')
the_best_pais = the_best[['Prata','Nacionalidade']].sum()
the_best_pais.sort_values('Prata', ascending = False).head(5)

#• Ranking por medalhas de Bronze:
the_best = df.groupby('Nacionalidade')
the_best_pais = the_best[['Bronze','Nacionalidade']].sum()
the_best_pais.sort_values('Bronze', ascending = False).head(5)

#• Ranking por menor total de medalhas de ouro Acumuladas:
the_best = df.groupby('Nacionalidade') 
the_best_pais = the_best[['Ouro','Nacionalidade']].sum()
the_best_pais.sort_values('Ouro', ascending = True).head(5)

#• Ranking por menor total de medalhas de prata Acumuladas:
the_best = df.groupby('Nacionalidade')
the_best_pais = the_best[['Prata','Nacionalidade']].sum()
the_best_pais.sort_values('Prata', ascending = True).head(5)

#• Ranking por menor total de medalhas de Bronze Acumuladas:
the_best = df.groupby('Nacionalidade')
the_best_pais = the_best[['Bronze','Nacionalidade']].sum()
the_best_pais.sort_values('Bronze', ascending = True).head(5)

df = pd.read_excel("/content/Tecnicos.xlsx")

#• Quantidade de técnicos por país:
df1=df['Nacionalidade'].value_counts()
pd.DataFrame(df1)

#• Quantidade de técnicos por esporte:
df1=df['Modalidade Esportiva'].value_counts().head(9)
pd.DataFrame(df1)

df = pd.read_excel("/content/Times.xlsx")

#• Quantidade de times por esporte:
df1=df['Modalidade Esportiva'].value_counts()
pd.DataFrame(df1)

#• Quantidade de times ao total por país:
df1=df['Nacionalidade'].value_counts()
pd.DataFrame(df1)